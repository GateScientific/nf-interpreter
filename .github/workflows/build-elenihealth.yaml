name: Build ESP32_S3_ELENIHEALTH

on:
  workflow_dispatch

jobs:
  build_ESP32_S3_ELENIHEALTH:
    runs-on: windows-latest

    env:
      TARGET_NAME: 'ESP32_S3_ELENIHEALTH'
      IDF_Target: 'esp32s3'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: 'EleniHealth'
  
    - name: Checkout Espressif IDF
      uses: actions/checkout@v4
      with:
        repository: espressif/esp-idf
        ref: v5.2.2
        path: esp-idf

    - name: Fix path with forward slashes
      run: echo "IDF_PATH=$(echo ${{ github.workspace }}/esp-idf | tr '\\' '/')" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - uses: lukka/get-cmake@latest

    - shell: pwsh
      name: Fix install.ps1
      run: |
        $filecontent = Get-Content '${{ env.IDF_PATH }}/install.ps1'
        attrib -r '${{ env.IDF_PATH }}/install.ps1'
        $filecontent -replace '--features=${FEATURES}' , ' ' | Out-File '${{ env.IDF_PATH }}/install.ps1' -Encoding utf8

    - name: Install IDF (step 1)
      shell: pwsh
      run: |
        ${{env.IDF_PATH}}/install.ps1
      working-directory: ${{ env.IDF_PATH }}

    - name: Install IDF (step 2)
      shell: pwsh
      run: |
        python -m pip install -r requirements.core.txt
      working-directory: ${{ env.IDF_PATH }}/tools/requirements

    - name: Install IDF (step 3)
      shell: pwsh
      run: |
        .\export.ps1
      working-directory:  ${{ env.IDF_PATH }}

    - name: Update PATH with IDF tools
      shell: pwsh
      run: |
        $ErrorActionPreference = 'SilentlyContinue'
        $envars_raw = python tools/idf_tools.py export --format key-value 2>$null

        # find element the PATH collection
        $pathElement = 0

        foreach ($element in $envars_raw) {
            if ($element.StartsWith('PATH=')) {
                break
            }
            $pathElement++
        }

        # go through the output and grab what has to be appended to the PATH
        # need to remove the entry for IDF CMake because it's using an older version of CMake, OK to remove after they update it to >3.24.0
        $newPath = $envars_raw[$pathElement].ToString().Replace('PATH=', '').Replace(';%PATH%', '').Replace('C:/Users/runneradmin/.espressif/tools/cmake/3.24.0/bin;', '')

        # append to path
        $env:Path += ";$newPath"
        # store the new path in the environment
        echo "PATH=$env:Path" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      working-directory: ${{ env.IDF_PATH }}

    - name: Set version
      run: nbgv cloud -a -c

    - name: Rename CMake presets
      working-directory: ${{ github.workspace }}/config
      run: |
        $file = "user-tools-repos.json"
        Rename-Item -Path "user-tools-repos.TEMPLATE.json" -NewName $file
        [regex]$pattern='user-tools-repos-cloud'
        $pattern.replace([IO.File]::ReadAllText($file), 'user-tools-repos', 1) | Out-File $file -Encoding UTF8
        
        $file = "user-prefs.json"
        Rename-Item -Path "user-prefs.TEMPLATE.json" -NewName $file
        
        $filecontent = Get-Content($file)
        attrib $file -r
        $filecontent -replace  'Debug', 'MinSizeRel' | Out-File $file -Encoding UTF8

    - name: Add dummy CMake presets
      working-directory: ${{ github.workspace }}/targets-community
      run: |
        New-Item -Path . -Name "CMakePresets.json" -ItemType "file" -Value "{`n""version"": 4,`n""include"": []`n}"

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: ${{ env.TARGET_NAME }}
        configurePresetAdditionalArgs: "['-DESP32_IDF_PATH=${{ env.IDF_PATH }}','-DBUILD_VERSION=${{env.NBGV_VersionMajor}}.${{env.NBGV_VersionMinor}}.${{env.NBGV_BuildNumber}}.${{env.NBGV_VersionHeight}}','-DCMAKE_BUILD_TYPE=MinSizeRel']"
        buildPreset: ${{ env.TARGET_NAME }}
        buildPresetAdditionalArgs: "['--config MinSizeRel']"

    - name: Generate ESP32 Partition tables
      run: python ${{env.IDF_PATH}}/components/partition_table/gen_esp32part.py --verify ${{ github.workspace }}/targets/ESP32/_IDF/${{ env.IDF_Target }}/partitions_nanoclr_8mb.csv ${{ github.workspace }}/build/partitions_8mb.bin

    - uses: actions/upload-artifact@v4
      with:
        name: '${{ env.TARGET_NAME }}-v${{env.NBGV_VersionMajor}}.${{env.NBGV_VersionMinor}}.${{env.NBGV_BuildNumber}}.${{env.NBGV_VersionHeight}}'
        path: |
          ${{ github.workspace }}/build/*.bin
          ${{ github.workspace }}/build/bootloader/*.bin
          ${{ github.workspace }}/build/*.dfu
          ${{ github.workspace }}/build/*.csv
