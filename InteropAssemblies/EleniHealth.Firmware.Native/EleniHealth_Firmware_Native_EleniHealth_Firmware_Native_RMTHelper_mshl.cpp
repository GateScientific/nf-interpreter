//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------

#include "EleniHealth_Firmware_Native.h"
#include "EleniHealth_Firmware_Native_EleniHealth_Firmware_Native_RMTHelper.h"

using namespace EleniHealth_Firmware_Native::EleniHealth_Firmware_Native;


HRESULT Library_EleniHealth_Firmware_Native_EleniHealth_Firmware_Native_RMTHelper::NativeGetRegister___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    NANOCLR_HEADER(); hr = S_OK;
    {

        unsigned int param0;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        unsigned int retValue = RMTHelper::NativeGetRegister( param0, hr );
        NANOCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retValue );
    }
    NANOCLR_NOCLEANUP();
}

HRESULT Library_EleniHealth_Firmware_Native_EleniHealth_Firmware_Native_RMTHelper::NativeSetRegisterOrOp___STATIC__VOID__U4__U4( CLR_RT_StackFrame& stack )
{
    NANOCLR_HEADER(); hr = S_OK;
    {

        unsigned int param0;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        unsigned int param1;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 1, param1 ) );

        RMTHelper::NativeSetRegisterOrOp( param0, param1, hr );
        NANOCLR_CHECK_HRESULT( hr );

    }
    NANOCLR_NOCLEANUP();
}

HRESULT Library_EleniHealth_Firmware_Native_EleniHealth_Firmware_Native_RMTHelper::NativeSetRegisterAndOp___STATIC__VOID__U4__U4( CLR_RT_StackFrame& stack )
{
    NANOCLR_HEADER(); hr = S_OK;
    {

        unsigned int param0;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        unsigned int param1;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 1, param1 ) );

        RMTHelper::NativeSetRegisterAndOp( param0, param1, hr );
        NANOCLR_CHECK_HRESULT( hr );

    }
    NANOCLR_NOCLEANUP();
}
